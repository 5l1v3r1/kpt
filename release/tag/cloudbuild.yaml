# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Build the image that contains most of the tools we need (e.g. tar,
  # jq, gzip, golang, bash, etc.) to build kpt tarball. This image
  # (kpt-builder) is re-used on most steps.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', '/workspace/release/Dockerfile.kpt-build', '-t', 'kpt-builder', '.']

  # Generate and package the licenses and necessary source code.
  - name: 'kpt-builder'
    args: ['bash', '/workspace/scripts/create-licenses.sh']
    volumes:
      - name: go-modules
        path: /go

  - name: 'kpt-builder'
    args: ['mkdir', '/workspace/latest']

  # FYI: If cross-platform build issues happen, then stop caching the modules in the volume.
  # build windows
  - name: 'kpt-builder'
    env: ['GOOS=windows', 'GOARCH=amd64', 'CGO_ENABLED=0', 'GO111MODULE=on']
    args: ['go', 'build', '-ldflags', '-X github.com/GoogleContainerTools/kpt/run.version=${TAG_NAME}', '-o', '/workspace/releases/${TAG_NAME}/windows_amd64/kpt.exe', '.']
    dir: '/workspace/'
    volumes:
      - name: go-modules
        path: /go
  - name: 'kpt-builder'
    args: ['cp', '/workspace/LICENSES.txt', '/workspace/releases/${TAG_NAME}/windows_amd64']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/lib.zip', '/workspace/releases/${TAG_NAME}/windows_amd64']
  # Create the tarball containing the kpt binary and licenses.
  - name: 'kpt-builder'
    args: ['tar', '-cf',
    '/workspace/releases/${TAG_NAME}/windows_amd64/kpt_windows_amd64-${TAG_NAME}.tar',
    '-C', '/workspace/releases/${TAG_NAME}/windows_amd64',
    'kpt.exe', 'LICENSES.txt', 'lib.zip']
  - name: 'kpt-builder'
    args: ['gzip', '/workspace/releases/${TAG_NAME}/windows_amd64/kpt_windows_amd64-${TAG_NAME}.tar']

  # copy latest
  - name: 'kpt-builder'
    args: ['mkdir', '/workspace/latest/windows_amd64/']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/releases/${TAG_NAME}/windows_amd64/kpt.exe', '/workspace/latest/windows_amd64/kpt.exe']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/releases/${TAG_NAME}/windows_amd64/kpt_windows_amd64-${TAG_NAME}.tar.gz', '/workspace/latest/windows_amd64/kpt_windows_amd64.tar.gz']

  # Cleanup by removing files that have been packaged into the
  # tarball.
  - name: 'kpt-builder'
    args: ['rm', '-f',
    '/workspace/releases/${TAG_NAME}/windows_amd64/kpt.exe',
    '/workspace/releases/${TAG_NAME}/windows_amd64/LICENSES.txt',
    '/workspace/releases/${TAG_NAME}/windows_amd64/lib.zip']

  # build linux
  - name: 'kpt-builder'
    env: ['GOOS=linux', 'GOARCH=amd64', 'CGO_ENABLED=0', 'GO111MODULE=on']
    args: ['go', 'build', '-ldflags', '-X github.com/GoogleContainerTools/kpt/run.version=${TAG_NAME}', '-o', '/workspace/releases/${TAG_NAME}/linux_amd64/kpt', '.']
    dir: '/workspace/'
    volumes:
      - name: go-modules
        path: /go
  - name: 'kpt-builder'
    args: ['cp', '/workspace/LICENSES.txt', '/workspace/releases/${TAG_NAME}/linux_amd64']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/lib.zip', '/workspace/releases/${TAG_NAME}/linux_amd64']
  # Create the tarball containing the kpt binary and licenses.
  - name: 'kpt-builder'
    args: ['tar', '-cf',
    '/workspace/releases/${TAG_NAME}/linux_amd64/kpt_linux_amd64-${TAG_NAME}.tar',
    '-C', '/workspace/releases/${TAG_NAME}/linux_amd64',
    'kpt', 'LICENSES.txt', 'lib.zip']
  - name: 'kpt-builder'
    args: ['gzip', '/workspace/releases/${TAG_NAME}/linux_amd64/kpt_linux_amd64-${TAG_NAME}.tar']

    # copy latest
  - name: 'kpt-builder'
    args: ['mkdir', '/workspace/latest/linux_amd64/']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/releases/${TAG_NAME}/linux_amd64/kpt', '/workspace/latest/linux_amd64/kpt']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/releases/${TAG_NAME}/linux_amd64/kpt_linux_amd64-${TAG_NAME}.tar.gz', '/workspace/latest/linux_amd64/kpt_linux_amd64.tar.gz']

  # Cleanup by removing files that have been packaged into the
  # tarball.
  - name: 'kpt-builder'
    args: ['rm', '-f',
    '/workspace/releases/${TAG_NAME}/linux_amd64/kpt',
    '/workspace/releases/${TAG_NAME}/linux_amd64/LICENSES.txt',
    '/workspace/releases/${TAG_NAME}/linux_amd64/lib.zip']

  # build darwin
  - name: 'kpt-builder'
    env: ['GOOS=darwin', 'GOARCH=amd64', 'CGO_ENABLED=0', 'GO111MODULE=on']
    args: ['go', 'build', '-ldflags', '-X github.com/GoogleContainerTools/kpt/run.version=${TAG_NAME}', '-o', '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt', '.']
    dir: '/workspace/'
    volumes:
      - name: go-modules
        path: /go
  - name: 'kpt-builder'
    args: ['cp', '/workspace/LICENSES.txt', '/workspace/releases/${TAG_NAME}/darwin_amd64']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/lib.zip', '/workspace/releases/${TAG_NAME}/darwin_amd64']
  # Create the tarball containing the kpt binary and licenses.
  - name: 'kpt-builder'
    args: ['tar', '-cf',
    '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt_darwin_amd64-${TAG_NAME}.tar',
    '-C', '/workspace/releases/${TAG_NAME}/darwin_amd64',
    'kpt', 'LICENSES.txt', 'lib.zip']
  - name: 'kpt-builder'
    args: ['gzip', '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt_darwin_amd64-${TAG_NAME}.tar']

  # copy latest
  - name: 'kpt-builder'
    args: ['mkdir', '/workspace/latest/darwin_amd64/']
  - name: 'kpt-builder'
    args: ['cp', '-r', '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt', '/workspace/latest/darwin_amd64/kpt']
  - name: 'kpt-builder'
    args: ['cp', '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt_darwin_amd64-${TAG_NAME}.tar.gz', '/workspace/latest/darwin_amd64/kpt_darwin_amd64.tar.gz']

  # Cleanup by removing files that have been packaged into the
  # tarball.
  - name: 'kpt-builder'
    args: ['rm', '-f',
    '/workspace/releases/${TAG_NAME}/darwin_amd64/kpt',
    '/workspace/releases/${TAG_NAME}/darwin_amd64/LICENSES.txt',
    '/workspace/releases/${TAG_NAME}/darwin_amd64/lib.zip']

  # build docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'tag', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}',  'gcr.io/$PROJECT_ID/kpt:latest' ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/kpt-dev/example-functions:${TAG_NAME}', '-f', 'functions/examples/Dockerfile', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'tag', 'gcr.io/kpt-dev/example-functions:${TAG_NAME}',  'gcr.io/kpt-dev/example-functions:latest' ]

  # run e2e tests and linting
  - name: 'kpt-builder'
    args: ['git', 'config', '--global', 'user.email', 'you@example.com']
    dir: '/workspace'
    volumes:
      - name: home
        path: /root
  - name: 'kpt-builder'
    args: ['git', 'config', '--global', 'user.name', 'Your Name']
    dir: '/workspace'
    volumes:
      - name: home
        path: /root
  - name: 'kpt-builder'
    args: ['make', 'all']
    env: ['GO111MODULE=on']
    dir: '/workspace'
    volumes:
      - name: go-modules
        path: /go
      - name: home
        path: /root

  # push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}']

  # update latest tag on release
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kpt:latest']

  # push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kpt-dev/example-functions:${TAG_NAME}']

  # update latest tag on release
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/kpt-dev/example-functions:latest']

  # push the binaries
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', '-r', '-a', 'public-read', '/workspace/releases/', 'gs://kpt-dev/']

  # update the latest binaries
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', '-r', '-a', 'public-read', '/workspace/latest', 'gs://kpt-dev/']

timeout: '60m'
